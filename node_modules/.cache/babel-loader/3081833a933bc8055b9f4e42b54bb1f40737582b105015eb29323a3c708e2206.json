{"ast":null,"code":"var _jsxFileName = \"D:\\\\website\\\\mywebsite\\\\src\\\\pages\\\\Blog\\\\BlogPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './BlogPost.css'; // Create a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogPost() {\n  _s();\n  const {\n    slug\n  } = useParams(); // Get the slug from the URL\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        // Replace with your actual API endpoint\n        const response = await fetch(`/api/posts/${slug}`);\n        if (response.ok) {\n          const data = await response.json();\n          setPost(data);\n        } else {\n          console.error('Error fetching post');\n        }\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPost();\n  }, [slug]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Post not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: post.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: post.title,\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogPost, \"Ef/NT/wPgZ7cV/MSacCb8u83VwQ=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","BlogPost","_s","slug","post","setPost","loading","setLoading","fetchPost","response","fetch","ok","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","date","src","image","alt","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["D:/website/mywebsite/src/pages/Blog/BlogPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './BlogPost.css'; // Create a CSS file for styling\r\n\r\nfunction BlogPost() {\r\n  const { slug } = useParams(); // Get the slug from the URL\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        // Replace with your actual API endpoint\r\n        const response = await fetch(`/api/posts/${slug}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPost(data);\r\n        } else {\r\n          console.error('Error fetching post');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching post:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPost();\r\n  }, [slug]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (!post) return <p>Post not found.</p>;\r\n\r\n  return (\r\n    <div className=\"blog-post\">\r\n      <h1>{post.title}</h1>\r\n      <p className=\"post-date\">{post.date}</p>\r\n      <div className=\"post-content\">\r\n        <img src={post.image} alt={post.title} className=\"post-image\" />\r\n        <div dangerouslySetInnerHTML={{ __html: post.content }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogPost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAK,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAcP,IAAI,EAAE,CAAC;QAClD,IAAIM,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCR,OAAO,CAACO,IAAI,CAAC;QACf,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;QACtC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAgB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAI,CAAChB,IAAI,EAAE,oBAAOJ,OAAA;IAAAgB,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAExC,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAKZ,IAAI,CAACkB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBpB,OAAA;MAAGqB,SAAS,EAAC,WAAW;MAAAL,QAAA,EAAEZ,IAAI,CAACmB;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCpB,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC3BhB,OAAA;QAAKwB,GAAG,EAAEpB,IAAI,CAACqB,KAAM;QAACC,GAAG,EAAEtB,IAAI,CAACkB,KAAM;QAACD,SAAS,EAAC;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEpB,OAAA;QAAK2B,uBAAuB,EAAE;UAAEC,MAAM,EAAExB,IAAI,CAACyB;QAAQ;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAvCQD,QAAQ;EAAA,QACEH,SAAS;AAAA;AAAAgC,EAAA,GADnB7B,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}